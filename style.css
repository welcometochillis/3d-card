/*to remove any default browser sstyling*/
*{
    margin: 0; /*space around elements*/ 
    padding: 0;  /*space around  elements content*/
    box-sizing: border-box;/* The box-sizing property allows us to include the padding and border in an element's total width and height*/

}
body{
    font-family: "poppins",sans-serif;
    min-height: 100vh; /*it will basically take up whole page*/
    display: flex;
    /*basically there block and inline elements in html 
    block takes full width means full line when added to page
    and inline dosent take full width and takes up only width it requires <span>
    and img tags are inline thats why we use span to highlight text
    and display flex sets the flexible lenth on flexible items
    we use it when we have to center or align items so we can use justify content and 
    align items*/
    align-items: center;/*vertical alignment learn here
    "https://www.w3schools.com/cssref/playit.asp?filename=playcss_align-items&preval=center"*/
    justify-content: center;/*horizontal alignment learn here
    "https://www.w3schools.com/cssref/playit.asp?filename=playcss_justify-content&preval=flex-start"
    */
    perspective: 1000px;
}
.container{   /*when we use class or id we put. and normal times just html tag*/
/*background-image:linear-gradient(to bottom, #33ccff 0%, #ff99cc 100%) ;*//*(angle,colorcombos)*/
width: 50%;
display: flex;
align-items: center;
justify-content: center;

}/*container is used as a box to animate like so you dont have to click on card to animate
you can just click on page*/
.card{
    
    transform-style:preserve-3d ;/*for that 3d look of text*/
    min-height: 80vh; /*100 means full page so yeah 80 ypu can predict*/
    width: 35rem; /*means root element font size*/
    border-radius: 30px;/*to make those corner curves*/
    padding:0rem 5rem ;/*padding: 25px 50px 75px 100px;
    top padding is 25px
    right padding is 50px
    bottom padding is 75px
    left padding is 100px*/
    box-shadow: 0 20px 20px rgba(0,0,0,0.2),0 0px 50px rgba(0,0,0,0.2);/*we stacked two shadows to give it bit of depth
    /*0 for left and right 20 for up and down length and 20 for blur
     rgba for shadow color 000 is for color, a alpha is 0.2 for opacity*/
}
.sneaker{
    min-height: 35vh;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: 0.75s ease-out;
}
.circle{
    height: 15rem;
    width: 15rem;
    background:linear-gradient(to right,rgba(245,70,66,0.75),rgba(8,83,156,00.75)) ;
    position: absolute;/*Elements are then positioned using the top, bottom, left, and right properties. However, these properties will not work unless the 
    position property is set first. They also work differently depending on the position value.*/
    border-radius: 50%; /*for circle*/
    z-index: 1;/*The z-index property specifies the stack order of an element.
                so 1 here means circle will be down at stack and 2 at img means it will be above
                circle in stack*/ 


    
}
.sneaker img{
    width: 20rem;
    z-index: 2;
}
.info h1{
    font-size: 3rem;
    transition: 0.75s ease-out;
}
.info h3{
    font-size: 1.3rem;
    padding: 2rem 0rem;
    color: #585858;
    font-weight: lighter;
    transition: 0.75s ease-out;
}
.sizes{
    display: flex;
    justify-content: space-between;
}
.sizes button{
    padding: 0.5rem 2rem;
    background: none;
    border: none;
    box-shadow: 0px 5px 10px rgba(0,0,0,0.2);
    border-radius: 30px;
    cursor: pointer;/*how cursor behaves when it hovers over element*/
    font-weight: bold;
    color:#585858;
}
button.active{
    background: #585858;
    color: white;
}
.purchase{
    margin-top: 5rem;
    transition: 0.75s ease-out;
}
.purchase button{
    width: 100%;
    padding: 1rem 0rem;
    background: #ff5544;
    border: none;/*to make border dissapear*/
    color: aliceblue;
    cursor: pointer;
    border-radius: 30px;
    font-weight: bold;
}